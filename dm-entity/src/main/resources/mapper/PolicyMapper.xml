<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cooler.ai.platform.dao.PolicyMapper" >
  <resultMap id="BaseResultMap" type="com.cooler.ai.platform.entity.Policy" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="policy_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="domain_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="task_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="from_state" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="intent_names" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="to_state" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="start_action_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="enable" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="msg" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, policy_name, domain_name, task_name, from_state, intent_names, to_state, start_action_id, 
    enable, msg
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from policy
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from policy
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cooler.ai.platform.entity.Policy" >
    insert into policy (id, policy_name, domain_name, 
      task_name, from_state, intent_names, 
      to_state, start_action_id, enable, 
      msg)
    values (#{id,jdbcType=INTEGER}, #{policyName,jdbcType=VARCHAR}, #{domainName,jdbcType=VARCHAR}, 
      #{taskName,jdbcType=VARCHAR}, #{fromState,jdbcType=VARCHAR}, #{intentNames,jdbcType=VARCHAR}, 
      #{toState,jdbcType=VARCHAR}, #{startActionId,jdbcType=INTEGER}, #{enable,jdbcType=TINYINT}, 
      #{msg,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cooler.ai.platform.entity.Policy" >
    insert into policy
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="policyName != null" >
        policy_name,
      </if>
      <if test="domainName != null" >
        domain_name,
      </if>
      <if test="taskName != null" >
        task_name,
      </if>
      <if test="fromState != null" >
        from_state,
      </if>
      <if test="intentNames != null" >
        intent_names,
      </if>
      <if test="toState != null" >
        to_state,
      </if>
      <if test="startActionId != null" >
        start_action_id,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="msg != null" >
        msg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="policyName != null" >
        #{policyName,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null" >
        #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="fromState != null" >
        #{fromState,jdbcType=VARCHAR},
      </if>
      <if test="intentNames != null" >
        #{intentNames,jdbcType=VARCHAR},
      </if>
      <if test="toState != null" >
        #{toState,jdbcType=VARCHAR},
      </if>
      <if test="startActionId != null" >
        #{startActionId,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=TINYINT},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cooler.ai.platform.entity.Policy" >
    update policy
    <set >
      <if test="policyName != null" >
        policy_name = #{policyName,jdbcType=VARCHAR},
      </if>
      <if test="domainName != null" >
        domain_name = #{domainName,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="fromState != null" >
        from_state = #{fromState,jdbcType=VARCHAR},
      </if>
      <if test="intentNames != null" >
        intent_names = #{intentNames,jdbcType=VARCHAR},
      </if>
      <if test="toState != null" >
        to_state = #{toState,jdbcType=VARCHAR},
      </if>
      <if test="startActionId != null" >
        start_action_id = #{startActionId,jdbcType=INTEGER},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=TINYINT},
      </if>
      <if test="msg != null" >
        msg = #{msg,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cooler.ai.platform.entity.Policy" >
    update policy
    set policy_name = #{policyName,jdbcType=VARCHAR},
      domain_name = #{domainName,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      from_state = #{fromState,jdbcType=VARCHAR},
      intent_names = #{intentNames,jdbcType=VARCHAR},
      to_state = #{toState,jdbcType=VARCHAR},
      start_action_id = #{startActionId,jdbcType=INTEGER},
      enable = #{enable,jdbcType=TINYINT},
      msg = #{msg,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 业务相关 -->
  <select id="selectByStateId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from policy
    where state_id = #{stateId,jdbcType=INTEGER} and  enable = 1
  </select>


  <select id="selectByFromToState" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from policy
    where domain_name = #{domainName,jdbcType=VARCHAR}
    and task_name = #{taskName,jdbcType=VARCHAR}
    and from_state = #{fromState,jdbcType=VARCHAR}
    and to_state = #{toState,jdbcType=VARCHAR}
    and  enable = 1
  </select>
</mapper>